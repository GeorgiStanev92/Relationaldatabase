// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Relationaldatabase.Data;

#nullable disable

namespace Relationaldatabase.Migrations
{
    [DbContext(typeof(RelationaldatabaseDbContext))]
    partial class RelationaldatabaseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ContractorStage", b =>
                {
                    b.Property<int>("ContractorsId")
                        .HasColumnType("int");

                    b.Property<int>("StagesId")
                        .HasColumnType("int");

                    b.HasKey("ContractorsId", "StagesId");

                    b.HasIndex("StagesId");

                    b.ToTable("ContractorStage");
                });

            modelBuilder.Entity("Relationaldatabase.Data.Models.Contractor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Contractors");
                });

            modelBuilder.Entity("Relationaldatabase.Data.Models.Module", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CompleteDate")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<int>("ContractorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateToComplete")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<double>("DocumentationVolume")
                        .HasColumnType("float");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<double>("SourceCodeVolume")
                        .HasColumnType("float");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.HasIndex("ContractorId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ProjectId");

                    b.HasIndex("StageId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("Relationaldatabase.Data.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Relationaldatabase.Data.Models.Stage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateToComplete")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Stages");
                });

            modelBuilder.Entity("ContractorStage", b =>
                {
                    b.HasOne("Relationaldatabase.Data.Models.Contractor", null)
                        .WithMany()
                        .HasForeignKey("ContractorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Relationaldatabase.Data.Models.Stage", null)
                        .WithMany()
                        .HasForeignKey("StagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Relationaldatabase.Data.Models.Contractor", b =>
                {
                    b.HasOne("Relationaldatabase.Data.Models.Project", null)
                        .WithMany("Contractors")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("Relationaldatabase.Data.Models.Module", b =>
                {
                    b.HasOne("Relationaldatabase.Data.Models.Contractor", "Contractor")
                        .WithMany("Modules")
                        .HasForeignKey("ContractorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Relationaldatabase.Data.Models.Project", null)
                        .WithMany("Modules")
                        .HasForeignKey("ProjectId");

                    b.HasOne("Relationaldatabase.Data.Models.Stage", "Stage")
                        .WithMany("Modules")
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contractor");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("Relationaldatabase.Data.Models.Stage", b =>
                {
                    b.HasOne("Relationaldatabase.Data.Models.Project", null)
                        .WithMany("Stages")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("Relationaldatabase.Data.Models.Contractor", b =>
                {
                    b.Navigation("Modules");
                });

            modelBuilder.Entity("Relationaldatabase.Data.Models.Project", b =>
                {
                    b.Navigation("Contractors");

                    b.Navigation("Modules");

                    b.Navigation("Stages");
                });

            modelBuilder.Entity("Relationaldatabase.Data.Models.Stage", b =>
                {
                    b.Navigation("Modules");
                });
#pragma warning restore 612, 618
        }
    }
}
